import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import Card from "components/Card";
import Header from "components/Header";
import { fetchData } from "fetch/fetchData";
import { BASE_IMG_ORIGINAL, BASE_IMG_W500 } from "globalConst";

type TCategory = {
  films: any[];
};

type TFilms = {
  original_title: string;
  original_name: string;
  name: string;
  poster_path: string;
  vote_average: number;
  profile_path: string;
  id: number;
};

const Category: NextPage<TCategory> = ({ films }) => {
  const router = useRouter();
  const { category } = router.query;

  return (
    <main className="bg-black h-full overflow-y-auto">
      <Head>
        <title> Hilman App | Category</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <span className="fixed w-full h-screen">
        <span className="absolute w-[200px] h-[200px] bottom-0 bg-black-500 right-0 blur-3xl opacity-10"></span>
        <span className="absolute w-[150px] h-[150px] bottom-0 bg-red left-0 blur-3xl opacity-20"></span>
        <span className="absolute w-[150px] h-[150px] top-40 bg-red right-0 blur-3xl opacity-20"></span>
      </span>
      <div className="container mx-auto">
        <Header />
      </div>
      <section className="container px-3 md:px-0 mx-auto pt-[100px] min-h-screen w-full">
        <div className="grid md:grid-cols-5 sm:grid-cols-3 gap-x-4 gap-y-6">
          {films.map(
            (
              {
                original_title,
                original_name,
                name,
                poster_path,
                vote_average,
                profile_path,
                id,
              }: TFilms,
              i
            ) => {
              let src: string = "";
              if (poster_path) src = BASE_IMG_ORIGINAL + poster_path;
              if (profile_path) src = BASE_IMG_ORIGINAL + profile_path;
              let title: string = "";
              if (original_title) title = original_title;
              if (original_name) title = original_name;
              if (name) title = name;
              return (
                <Card
                  key={i}
                  param={category}
                  id={id}
                  title={title}
                  src={src}
                  rate={vote_average}
                />
              );
            }
          )}
        </div>
      </section>
    </main>
  );
};

export default Category;

export const getServerSideProps: GetServerSideProps<TCategory> = async (
  ctx
) => {
  const { category } = ctx.query;
  const results: any[] = await fetchData<typeof category>(category);
  return { props: { films: results } };
};
