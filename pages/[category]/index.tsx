import type {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage,
} from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import Card from "../../components/Card";
import Header from "../../components/Header";
import { fetchData } from "../../fetch/fetchData";

const Category: NextPage = (
  props: InferGetServerSidePropsType<typeof getServerSideProps>
) => {
  const router = useRouter();
  const { category } = router.query;
  const { films } = props;

  return (
    <div className="bg-black h-full overflow-y-auto">
      <Head>
        <title> Hilman App | Category</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <span className="fixed w-full h-screen">
        <span className="absolute w-[200px] h-[200px] bottom-0 bg-black-500 right-0 blur-3xl opacity-10"></span>
        <span className="absolute w-[150px] h-[150px] bottom-0 bg-red left-0 blur-3xl opacity-20"></span>
        <span className="absolute w-[150px] h-[150px] top-40 bg-red right-0 blur-3xl opacity-20"></span>
      </span>
      <div className="container mx-auto">
        <Header />
      </div>
      <section className="container px-3 md:px-0 mx-auto pt-[100px] min-h-screen w-full">
        <div className="grid md:grid-cols-5 sm:grid-cols-3 gap-x-4 gap-y-6">
          {films.map(
            (
              {
                original_title,
                original_name,
                name,
                poster_path,
                vote_average,
                profile_path,
                id,
              }: typeof films,
              i: number
            ) => {
              const src = poster_path
                ? "https://image.tmdb.org/t/p/w500" + poster_path
                : profile_path
                ? "https://image.tmdb.org/t/p/w500" + profile_path
                : "";
              let title = "";
              if (original_title) title = original_title;
              if (original_name) title = original_name;
              if (name) title = name;
              return (
                <Card
                  key={i}
                  param={category}
                  id={id}
                  title={title}
                  src={src}
                  rate={vote_average}
                />
              );
            }
          )}
        </div>
      </section>
    </div>
  );
};

export default Category;

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { category } = ctx.query;
  const results = await fetchData<typeof category>(category);
  return { props: { films: results } };
};
